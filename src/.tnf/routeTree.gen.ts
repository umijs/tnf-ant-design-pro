/* prettier-ignore-start */

/* eslint-disable */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.
// Import Routes
import { Route as R404Import } from './../pages/404';
import { Route as rootRoute } from './../pages/__root';
import { Route as AdminImport } from './../pages/admin';
import { Route as IndexImport } from './../pages/index';
import { Route as ListTableListImport } from './../pages/list.table-list';
import { Route as UserLoginImport } from './../pages/user.login';

// Create/Update Routes

const AdminRoute = AdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any);

const R404Route = R404Import.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any);

const UserLoginRoute = UserLoginImport.update({
  id: '/user/login',
  path: '/user/login',
  getParentRoute: () => rootRoute,
} as any);

const ListTableListRoute = ListTableListImport.update({
  id: '/list/table-list',
  path: '/list/table-list',
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    '/404': {
      id: '/404';
      path: '/404';
      fullPath: '/404';
      preLoaderRoute: typeof R404Import;
      parentRoute: typeof rootRoute;
    };
    '/admin': {
      id: '/admin';
      path: '/admin';
      fullPath: '/admin';
      preLoaderRoute: typeof AdminImport;
      parentRoute: typeof rootRoute;
    };
    '/list/table-list': {
      id: '/list/table-list';
      path: '/list/table-list';
      fullPath: '/list/table-list';
      preLoaderRoute: typeof ListTableListImport;
      parentRoute: typeof rootRoute;
    };
    '/user/login': {
      id: '/user/login';
      path: '/user/login';
      fullPath: '/user/login';
      preLoaderRoute: typeof UserLoginImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/404': typeof R404Route;
  '/admin': typeof AdminRoute;
  '/list/table-list': typeof ListTableListRoute;
  '/user/login': typeof UserLoginRoute;
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/404': typeof R404Route;
  '/admin': typeof AdminRoute;
  '/list/table-list': typeof ListTableListRoute;
  '/user/login': typeof UserLoginRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/': typeof IndexRoute;
  '/404': typeof R404Route;
  '/admin': typeof AdminRoute;
  '/list/table-list': typeof ListTableListRoute;
  '/user/login': typeof UserLoginRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: '/' | '/404' | '/admin' | '/list/table-list' | '/user/login';
  fileRoutesByTo: FileRoutesByTo;
  to: '/' | '/404' | '/admin' | '/list/table-list' | '/user/login';
  id: '__root__' | '/' | '/404' | '/admin' | '/list/table-list' | '/user/login';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  R404Route: typeof R404Route;
  AdminRoute: typeof AdminRoute;
  ListTableListRoute: typeof ListTableListRoute;
  UserLoginRoute: typeof UserLoginRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R404Route: R404Route,
  AdminRoute: AdminRoute,
  ListTableListRoute: ListTableListRoute,
  UserLoginRoute: UserLoginRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/404",
        "/admin",
        "/list/table-list",
        "/user/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/404": {
      "filePath": "404.tsx"
    },
    "/admin": {
      "filePath": "admin.tsx"
    },
    "/list/table-list": {
      "filePath": "list.table-list.tsx"
    },
    "/user/login": {
      "filePath": "user.login.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
